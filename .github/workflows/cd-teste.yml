name: Continuous Delivery
on:
  push:
    branches:
      - main  # Ou qualquer outra branch que você escolher

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Simulando Continuous Delivery
        uses: actions/upload-artifact@v4
        with:
          name: Projeto.zip
          path: |
            src/main.py
            README.md

  deploy:
    runs-on: ubuntu-latest
    needs: delivery
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Projeto.zip
      - name: Display structure of downloaded files
        run: ls -R

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: user/app:latest

  discord:
    needs: [delivery, deploy, docker]  
    runs-on: ubuntu-latest
    if: success()  
    steps:
      - name: Notificar no Discord
        uses: appleboy/discord-action@master
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          username: GitHub Actions
          message: |
            CD executado com sucesso.
            Repositório: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Autor: ${{ github.actor }}
            Commit: ${{ github.event.head_commit.message }}
