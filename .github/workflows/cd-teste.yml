name: Continuous Delivery
on: 
  push:
    branches:
      - main  # Ou qualquer outra branch

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Simulando Continuous Delivery 
        uses: actions/upload-artifact@v4
        with:
          name: Projeto.zip
          path: |
            **.py
            README.md

  deploy:
    runs-on: ubuntu-latest
    needs: delivery
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Projeto.zip
      - name: Display structure of downloaded files
        run: ls -R

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: user/app:latest

  # Notifica√ß√£o de Delivery
  discord_delivery:
    runs-on: ubuntu-latest
    needs: delivery
    if: always()  # Sempre ser√° executado, independentemente do sucesso/falha do job anterior
    steps:
      - name: Notify Discord (Delivery)
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Continuous Delivery conclu√≠do. Verifique os resultados abaixo:"
          embeds: >
            [
              {
                "title": "üîÑ Continuous Delivery Executado",
                "description": "Entrega realizada com sucesso!",
                "color": 3066993,
                "fields": [
                  {
                    "name": "Status",
                    "value": "${{ job.status == 'success' && '‚úÖ Sucesso' || '‚ùå Falhou' }}"
                  }
                ]
              }
            ]

  # Notifica√ß√£o de Deploy
  discord_deploy:
    runs-on: ubuntu-latest
    needs: deploy
    if: always() 
    steps:
      - name: Notify Discord (Deploy)
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Deploy conclu√≠do. Verifique os resultados abaixo:"
          embeds: >
            [
              {
                "title": "üöÄ Deploy Executado",
                "description": "Deploy realizado com sucesso!",
                "color": 3066993,
                "fields": [
                  {
                    "name": "Status",
                    "value": "${{ job.status == 'success' && '‚úÖ Sucesso' || '‚ùå Falhou' }}"
                  }
                ]
              }
            ]
